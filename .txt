#Importer les Librairies traitement image 
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import skimage


#importer les librairies utilitaires 
import pathlib
import math
import random

def chooseRandomImg():
    img = plt.imread(images[random.randint(0, len(images)-1)])
    
    return img

#chargement du dataset
images = [f for f in pathlib.Path('photo').iterdir()]

print(len(images))

#Affichage des images chachune dans un plot différent
for img in images : 
    plt.figure()

    plt.title(img.name)

    img = plt.imread(img)

    plt.imshow(img)

#Cropper les images
def center_crop(img, width = None, height = None):
    assert width or height, 'Précisez au moins une dimension'
    width = width or height
    height = height or width

    org_height, org_width = img.shape[:2] #(256, 185, 3)
    cropCenter_x, cropCenter_y = org_width// 2, org_height //2
    dimCrop_x, dimCrop_y = width // 2, height // 2

    return img[cropCenter_y-dimCrop_y : cropCenter_y + dimCrop_y, cropCenter_x-dimCrop_x : cropCenter_x + dimCrop_x] #[80, 250, :, :]

img = chooseRandomImg()

cropped_img = center_crop(img, 150)

fig, axs = plt.subplots(ncols = 2, nrows = 1, figsize = (20,20))

#Passage en grayscale

img = chooseRandomImg()

img_NB = skimage.color.rgb2gray(img)

fig, axs = plt.subplots(ncols = 2, nrows = 1, figsize = (20,20))

axs[0].imshow(img)
axs[0].set_title('Image de base')

axs[1].imshow(img_NB, cmap = plt.cm.gray)
axs[1].set_title('Image en N&B')

##Ajout de bruit

img=chooseRandomImg()
noise_img= skimage.util.random_noise(img, var=0.5)

fig, axs = plt.subplots(nrows=1 , ncols=2 , figsize=(20,20))

axs[0].imshow(img)

#Passage en HSV et seuillage
img=chooseRandomImg()
hsv_img=skimage.color.rgb2hsv(img)
hue_img=hsv_img[:,:,0]
sat_img=hsv_img[:,:,1]
val_img=hsv_img[:,:,2]

hue_threshold=0.04
val_threshold=0.02
bin_img=(hue_img > hue_threshold ) | (val_img < val_threshold)

cols=3
rows=2

fig, axs=plt.subplots(nrows=2, ncols=3, figsize=(8,8))

axs[0,0].imshow(img)
axs[0,1].imshow(hsv_img)
axs[0,2].imshow(hue_img, cmap='hsv')
axs[1,0].imshow(sat_img, cmap='hsv')
axs[1,1].imshow(val_img, cmap='hsv')
axs[1,2].imshow(bin_img)